server:
  port: 7000
spring:
  application:
    name: ${artifactId}
  main:
    allow-bean-definition-overriding: true #当遇到同样名字的时候，是否允许覆盖注册
  profiles:
    active: ${profile.name}
  cloud:
    nacos:
      discovery:
        server-addr: ${discovery.server-addr}
        namespace: ${config.namespace}
#        ip: ${discovery.server-ip}
      config:
        server-addr:  ${config.server-addr}
        namespace:  ${config.namespace}
        file-extension: yaml
        shared-dataids: redis.yaml,mail.yaml
    gateway:
      discovery:
        locator:
          enabled: true
          # 服务名小写
          lower-case-service-id: true
      routes:
        - id: javayh-demo-api
          # lb代表从注册中心获取服务，且已负载均衡方式转发
          uri: lb://javayh-demo-api
          predicates:
            - Path=/javayh-demo-api/**
          # 加上StripPrefix=1，否则转发到后端服务时会带上demo前缀
          filters:
            - SwaggerHeaderFilter
            - StripPrefix=1
            # 服务降级  触发调用 HystrixFallbackHandler GatewayFallbackConfig
            - name: Hystrix
              args:
                name: default
                fallbackUri: 'forward:/defaultfallback'
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1000  # 令牌桶的容积
                redis-rate-limiter.burstCapacity: 1000  # 流速 每秒
                key-resolver: "#{@ipKeyResolver}" #SPEL表达式去的对应的bean

        - id: javayh-demo-common
          # lb代表从注册中心获取服务，且已负载均衡方式转发
          uri: lb://javayh-demo-common
          predicates:
            - Path=/javayh-demo-common/**
          # 加上StripPrefix=1，否则转发到后端服务时会带上demo前缀
          filters:
            - SwaggerHeaderFilter
            - StripPrefix=1
            # 服务降级  触发调用 HystrixFallbackHandler GatewayFallbackConfig
            - name: Hystrix
              args:
                name: default
                fallbackUri: 'forward:/defaultfallback'
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1000  # 令牌桶的容积
                redis-rate-limiter.burstCapacity: 1000  # 流速 每秒
                key-resolver: "#{@ipKeyResolver}" #SPEL表达式去的对应的bean

        - id: javayh-demo-feign
          # lb代表从注册中心获取服务，且已负载均衡方式转发
          uri: lb://javayh-demo-feign
          predicates:
            - Path=/javayh-demo-feign/**
          # 加上StripPrefix=1，否则转发到后端服务时会带上demo前缀
          filters:
            - SwaggerHeaderFilter
            - StripPrefix=1
            # 服务降级  触发调用 HystrixFallbackHandler GatewayFallbackConfig
            - name: Hystrix
              args:
                name: default
                fallbackUri: 'forward:/defaultfallback'
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1000  # 令牌桶的容积
                redis-rate-limiter.burstCapacity: 1000  # 流速 每秒
                key-resolver: "#{@ipKeyResolver}" #SPEL表达式去的对应的bean

logging:
  level:
    org.springframework.cloud.openfeign: debug
    org.springframework.cloud.sleuth: debug

management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always